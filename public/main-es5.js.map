{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/components/card-view-table/card-view-table.component.ts","webpack:///src/app/components/card-view-table/card-view-table.component.html","webpack:///src/app/components/card-view/card-view.component.ts","webpack:///src/app/components/card-view/card-view.component.html","webpack:///src/app/components/component.module.ts","webpack:///src/app/components/deackof-cards/deackof-cards.component.ts","webpack:///src/app/components/deackof-cards/deackof-cards.component.html","webpack:///src/app/components/deal-cards/deal-cards.component.ts","webpack:///src/app/components/deal-cards/deal-cards.component.html","webpack:///src/app/components/search-user/search-user.component.html","webpack:///src/app/components/search-user/search-user.component.ts","webpack:///src/app/models/authentication/userLogin.ts","webpack:///src/app/models/game/cardTable.ts","webpack:///src/app/models/game/game.ts","webpack:///src/app/models/game/table.ts","webpack:///src/app/models/game/user.ts","webpack:///src/app/pages/create-game/create-game.component.ts","webpack:///src/app/pages/create-game/create-game.component.html","webpack:///src/app/pages/join-game/join-game.component.ts","webpack:///src/app/pages/join-game/join-game.component.html","webpack:///src/app/pages/login/login.component.ts","webpack:///src/app/pages/login/login.component.html","webpack:///src/app/pages/menu/menu.component.ts","webpack:///src/app/pages/menu/menu.component.html","webpack:///src/app/pages/page.module.ts","webpack:///src/app/pages/table/table.component.html","webpack:///src/app/pages/table/table.component.ts","webpack:///src/app/services/authentication/auth-guard.service.ts","webpack:///src/app/services/authentication/auth.service.ts","webpack:///src/app/services/game/card.service.ts","webpack:///src/app/services/game/game.service.ts","webpack:///src/app/services/game/model/gameModel.ts","webpack:///src/app/services/game/table.service.ts","webpack:///src/app/services/game/usergame.service.ts","webpack:///src/app/services/srvice.module.ts","webpack:///src/app/services/user/user.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","auth","router","title","islogued","getUser","subscribe","userResult","user","logout","navigate","selector","templateUrl","styleUrls","AppModule","initializeApp","firebase","declarations","providers","bootstrap","CardViewTableComponent","playCard","card","type","toUpperCase","cardType","CardViewComponent","ComponentModule","DeackofCardsComponent","DealCardsComponent","dealCard","chkPutSample","emit","PutSample","countCardUsers","cardCount","countCardTable","cardCountTable","sednData","SearchUserComponent","userService","gameService","cardService","userGameService","messageError","hiddenError","typeDeck","getListDeckofCardsAsync","decks","deckCards","nameGame","getGame","games","length","setErrorMessage","find","x","owner","getCurrentUser","game","cuser","name","addUsertoGame","queryParams","gameData","getUsersGame","users","forEach","element","deleteUserforGame","deleteGame","getNewGame","createNewGame","createNameGame","response","getCards","cardList","deck","shuffle","message","show","array","currentIndex","temporaryValue","randomIndex","Math","floor","random","joinGame","createGame","UserLogin","idx","displayName","CardTable","ccard","cuserName","userName","Game","gname","gowner","gcards","originalDeck","Table","User","CreateGameComponent","JoinGameComponent","LoginComponent","getGameforUserId","result","JSON","stringify","login","MenuComponent","ntNewGame","getObserverUsers","PageModule","TableComponent","tableService","authService","routerService","tablecards","getTableforGameId","mycards","getCardforUserforGameId","usercards","getChangeUsersGame","data","index","getDeckofCards","getNecesaryCard","slice","sendUserCard","deleteCardofDeckofCards","count","cards","putSampleprocess","playCardprocess","ctable","push","sendtCard","sendTableCard","deleteCard","deleteCardofUser","resetCardsinTable","resetCardsforUser","resetCardList","countCardforUser","usersLength","dealCards","AuthGuardService","state","returnUrl","url","providedIn","AuthService","firestore","userSubject","asObservable","signInWithPopup","GoogleAuthProvider","currentUser","uid","userItems","collection","doc","set","Object","assign","next","signOut","CardService","get","pipe","docs","map","toPromise","exists","idUser","update","FieldValue","arrayUnion","parse","arrayRemove","GameService","model","table","error","gameid","ref","where","empty","g","valueChanges","GameModel","gdeck","TableService","m","reverse","p","filter","current","userId","UserGameService","iduser","currentId","SrviceModule","UserService","currentUsers","includes","environment","production","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","bootstrapModule","err","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { LoginComponent } from './pages/login/login.component';\nimport { MenuComponent } from './pages/menu/menu.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuardService } from './services/authentication/auth-guard.service';\nimport { TableComponent } from './pages/table/table.component';\nimport { CreateGameComponent } from './pages/create-game/create-game.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'login',\n    pathMatch: 'full'\n  },\n  { path: 'login', component: LoginComponent},\n  { path: 'table', component: TableComponent , canActivate: [AuthGuardService]},\n  { path: 'menu', component: MenuComponent , canActivate: [AuthGuardService]},\n  { path: 'newGame', component: CreateGameComponent , canActivate: [AuthGuardService]} \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<nav class=\"navbar navbar-expand-md navbar-dark bg-dark mb-4\">\n    <a class=\"navbar-brand\">Naipes</a>\n    <button class=\"navbar-toggler collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExampleDefault\" aria-controls=\"navbarsExampleDefault\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"navbar-collapse collapse\" id=\"navbarsExampleDefault\" *ngIf=\"islogued\">\n        <ul class=\"navbar-nav mr-auto\">\n            <li class=\"nav-item active\">\n                <a class=\"nav-link\" [routerLink]=\"['/newGame']\">Nueva partida</a>\n            </li>\n            <li class=\"nav-item active\">\n                <a class=\"nav-link\" [routerLink]=\"['/table']\">Ir a la mesa</a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" (click)=\"logout()\">Salir</a>\n            </li>\n        </ul>\n    </div>\n</nav>\n<main role=\"main\" class=\"container\">\n    <div class=\"jumbotron\">\n        <router-outlet>\n        </router-outlet>\n    </div>\n</main>","import { AuthService } from './services/authentication/auth.service';\nimport { Component } from '@angular/core';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { Router } from '@angular/router';\nimport { UserLogin } from './models/authentication/userLogin';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'cards';\n  items: Observable<any[]>;\n  islogued:boolean = false;\n  user:UserLogin;\n  constructor(public auth: AuthService,\n    private router: Router) {\n      this.auth.getUser().subscribe((userResult) =>\n      {\n        this.islogued = userResult != null;\n        this.user =userResult;\n        //if(!this.islogued)\n         // this.router.navigate(['login']);\n      }) \n  }\n  async login() {\n    //this.auth.login();\n  }\n  logout() {\n    this.auth.logout();\n    this.router.navigate(['login'])   \n  }\n\n\n}\n","import { SrviceModule } from './services/srvice.module';\nimport { environment } from './../environments/environment';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { PageModule } from './pages/page.module';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFirestoreModule,\n    PageModule,\n    SrviceModule\n  ],\n  providers: [\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { CardTable } from './../../models/game/cardTable';\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Card } from '../../models/game/card';\n\n@Component({\n  selector: 'app-card-view-table',\n  templateUrl: './card-view-table.component.html',\n  styleUrls: ['./card-view-table.component.css']\n})\nexport class CardViewTableComponent implements OnInit {\n  @Input() card:CardTable;\n  @Output() playCard:EventEmitter<CardTable> = new EventEmitter();\n  cardType:string;\n  constructor() { }\n\n  ngOnInit(): void {\n    if(this.card.card.type.toUpperCase() == \"COPA\")\n    this.cardType = \"./assets/images/icons/cup.png\";\n  else if(this.card.card.type.toUpperCase() == \"ESPADA\")\n    this.cardType = \"./assets/images/icons/sward.png\";\n  else if(this.card.card.type.toUpperCase() == \"ORO\")\n    this.cardType = \"./assets/images/icons/sun.jpg\";\n  else if(this.card.card.type.toUpperCase() == \"BASTO\")\n    this.cardType = \"./assets/images/icons/basto.png\";\n  }\n\n}\n","<div class=\"card\">\n    <h5 class=\"card-title\">Jugador: {{card.userName}}</h5>\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <h5 class=\"col-4\" class=\"card-title\">{{card.card.number}}</h5>\n            <h6 class=\"col-8 float-right card-subtitle mb-2 text-muted\">{{card.card.type}}</h6>\n        </div>\n        <div class=\"row\">\n            <img class=\"col-12\" [src]=\"cardType\" />\n        </div>\n    </div>\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Card } from '../../models/game/card';\n\n@Component({\n  selector: 'app-card-view',\n  templateUrl: './card-view.component.html',\n  styleUrls: ['./card-view.component.css']\n})\nexport class CardViewComponent implements OnInit {\n  @Input() card:Card;\n  @Output() playCard:EventEmitter<Card> = new EventEmitter();\n  cardType:string;\n  constructor() { }\n\n  ngOnInit(): void {\n    if(this.card.type.toUpperCase() == \"COPA\")\n      this.cardType = \"./assets/images/icons/cup.png\";\n    else if(this.card.type.toUpperCase() == \"ESPADA\")\n      this.cardType = \"./assets/images/icons/sward.png\";\n    else if(this.card.type.toUpperCase() == \"ORO\")\n      this.cardType = \"./assets/images/icons/sun.jpg\";\n    else if(this.card.type.toUpperCase() == \"BASTO\")\n      this.cardType = \"./assets/images/icons/basto.png\";\n  }\n\n}\n","<div class=\"card\">\n    <!-- <img [src]=\"card.imagePath\" class=\"card-img-top\" width=\"50px\">  -->\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <h5 class=\"col-4\" class=\"card-title\">{{card.number}}</h5>\n            <h6 class=\" col-8 float-right card-subtitle mb-2 text-muted\">{{card.type}}</h6>\n        </div>\n        <div class=\"row\">\n            <img class=\"col-12\" [src]=\"cardType\" />\n        </div>\n        <a (click)=\"playCard.emit(card)\"><i class=\"fa fa-share-square-o\" aria-hidden=\"true\"></i> Jugar</a>\n    </div>\n</div>","\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SearchUserComponent } from './search-user/search-user.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CardViewComponent } from './card-view/card-view.component';\r\nimport { DealCardsComponent } from './deal-cards/deal-cards.component';\r\nimport { CardViewTableComponent } from './card-view-table/card-view-table.component';\nimport { DeackofCardsComponent } from './deackof-cards/deackof-cards.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SearchUserComponent,\r\n    CardViewComponent,\r\n    DealCardsComponent,\r\n    CardViewTableComponent,\r\n    DeackofCardsComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule\r\n  ],\r\n  exports:[\r\n    SearchUserComponent,\r\n    CardViewComponent,\r\n    DealCardsComponent,\r\n    CardViewTableComponent\r\n  ]\r\n})\r\nexport class ComponentModule { }","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-deackof-cards',\n  templateUrl: './deackof-cards.component.html',\n  styleUrls: ['./deackof-cards.component.css']\n})\nexport class DeackofCardsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  takeaCard()\n  {\n    \n  }\n}\n","<div class=\"card\">\n    <div class=\"card-body\">\n        <h5 class=\"card-title\"></h5>\n        <h6 class=\"card-subtitle mb-2 text-muted\"></h6>\n        <button class=\"btn btn-primary\">Robar</button>\n    </div>\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-deal-cards',\n  templateUrl: './deal-cards.component.html',\n  styleUrls: ['./deal-cards.component.css']\n})\nexport class DealCardsComponent implements OnInit {\n  @Input() idModal:string;\n  @Output() dealCard:EventEmitter<any> = new EventEmitter();\n  chkPutSample:boolean = false;\n  cardCountTable:number;\n  cardCount:number;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  sednData()\n  {\n    this.dealCard.emit({PutSample:this.chkPutSample, \n      countCardUsers:this.cardCount,\n      countCardTable: this.cardCountTable});\n  }\n\n}\n","<div class=\"modal\" tabindex=\"-1\" role=\"dialog\" [id]=\"idModal\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\">Vas a repartir las cartas.</h5>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"form-group\">\n                    <label for=\"exampleInputEmail1\">Cantidad de cartas a repartir a cada participante.</label>\n                    <input type=\"number\" [(ngModel)]=\"cardCount\" class=\"form-control\" aria-describedby=\"emailHelp\" placeholder=\"Ingrese la cantidad de cartas a repartir\">\n                </div>\n                <div class=\"form-check\">\n                    <input type=\"checkbox\" class=\"form-check-input\" [(ngModel)]=\"chkPutSample\">\n                    <label class=\"form-check-label\" for=\"exampleCheck1\">Quiero poner muestra</label>\n                    <input [(ngModel)]=\"cardCountTable\" [hidden]=\"!chkPutSample\" type=\"number\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Ingrese la cantidad de cartas a poenr en la mesa\">\n                </div>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Salir</button>\n                <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"sednData()\">Repartir</button>\n            </div>\n        </div>\n    </div>\n</div>","<div class=\"form-group\">\n    <div class=\"form-group\">\n        <input [(ngModel)]=\"nameGame\" type=\"text\" class=\"form-control\" placeholder=\"Nombre de la nueva partida\" aria-label=\"Nombre de la nueva partida\" aria-describedby=\"button-addon2\">\n    </div>\n    <button class=\"btn btn-outline-primary\" type=\"button\" data-toggle=\"modal\" data-target=\"#typeCardsModal\">Crear</button>\n    <button class=\"btn btn-outline-secondary pull-right\" type=\"button\" (click)=\"joinGame()\">Unirme al juego</button>\n</div>\n<div class=\"alert alert-danger\" [hidden]=\"hiddenError\" role=\"alert\">\n    {{messageError}}\n</div>\n\n<div class=\"modal\" tabindex=\"-1\" role=\"dialog\" id=\"typeCardsModal\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\">Vas a creaar una nueva partida.</h5>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"form-group\">\n                    <label for=\"exampleFormControlSelect1\">Selecciona el tipo de cartas a jugar</label>\n                    <select [(ngModel)]=\"typeDeck\" class=\"form-control\" id=\"exampleFormControlSelect1\">\n                      <option *ngFor=\"let item of deckCards\" [value]=\"item.type\">{{item.name}}</option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Salir</button>\n                <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"createGame()\">Crear</button>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { UserService } from '../../services/user/user.service';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { GameService } from '../../services/game/game.service';\nimport { AuthService } from '../../services/authentication/auth.service';\nimport { Router } from '@angular/router';\nimport { Game } from '../../models/game/game';\nimport { CardService } from '../../services/game/card.service';\nimport { DeckofCard } from '../../models/game/deckofCard';\nimport { UserGameService } from '../../services/game/usergame.service';\nimport { User } from '../../models/game/user';\n\n@Component({\n  selector: 'app-search-user',\n  templateUrl: './search-user.component.html',\n  styleUrls: ['./search-user.component.css']\n})\nexport class SearchUserComponent implements OnInit {\n  deckCards:DeckofCard[];\n  userSearch:string;\n  nameGame:string;\n  messageError:string = \"No pudimos hacer tu tarea.\";\n  hiddenError:boolean = true;\n  typeDeck:number = 1;\n  constructor(public userService: UserService,\n    public gameService:GameService,\n    public auth:AuthService,\n    public cardService:CardService,\n    private router: Router,\n    public userGameService: UserGameService) { }\n\n  ngOnInit(): void {\n    this.cardService.getListDeckofCardsAsync().then((decks) =>\n    {\n        this.deckCards = decks;\n    });\n  }\n  async joinGame()\n  {\n    this.hiddenError = true;\n    if(this.nameGame == null || this.nameGame == \"\")\n      return;\n    let games = await this.gameService.getGame(this.nameGame);\n    if(games == null || games.length == 0)\n     this.setErrorMessage(\"No tenemos ninguna partida en curso.\",true);\n    else if(games.find(x => x.owner.user.id ==  this.auth.getCurrentUser().id))\n      this.setErrorMessage(\"Ya sos parte de esta partida, es mas sos el creador.\",true);\n    else\n    {\n      let game = games[0];\n      let cuser = this.auth.getCurrentUser();\n      let user = new User(cuser.id, cuser.name);\n      await this.gameService.addUsertoGame(game.id, user);\n      this.router.navigate(['table'],{ queryParams: { gameData: game } });\n    }       \n  }\n  async createGame()\n  {\n    this.hiddenError = true;\n    if(this.nameGame == null || this.nameGame == \"\")\n      return;\n    let games = await this.gameService.getGame(this.nameGame);\n    if(games != null && games.length > 0 && games[0].id != this.auth.getCurrentUser().id)\n      this.setErrorMessage(\"Este nombre de partida ya esta en uso.\",true);\n    else\n    {\n\n        let users = await this.userGameService.getUsersGame(this.auth.getCurrentUser().id);\n        if(users)\n          users.forEach(element => {\n            this.userGameService.deleteUserforGame(this.auth.getCurrentUser().id, element.user.id).then();\n          });\n        await this.gameService.deleteGame(this.auth.getCurrentUser().id);\n\n      let game = this.getNewGame();\n      let createNameGame = await this.gameService.createNewGame(game);\n      this.router.navigate(['table'],{ queryParams: { game: game } });\n      }\n  }\n  private getNewGame()\n  {\n    let cuser = this.auth.getCurrentUser();\n    let user = new User(cuser.id, cuser.name);\n    var response = new Game(this.nameGame, user, this.getCards(this.typeDeck).cardList);\n    response.users = [this.auth.getCurrentUser().id];\n    return response;\n  }\n  private getCards(typeDeck:number):DeckofCard\n  {\n    let deck = this.deckCards.find(x => x.type == typeDeck);\n    deck.cardList = this.shuffle(deck.cardList);\n    return deck;\n  }\n\n setErrorMessage(message:string, show:boolean)\n {  \n      this.hiddenError = !show;\n      this.messageError = message;\n }\n shuffle(array) {\n  var currentIndex = array.length, temporaryValue, randomIndex;\n\n  while (0 !== currentIndex) {\n\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n }\n}\n","import { Card } from '../game/card';\r\nexport class UserLogin\r\n{\r\n    constructor(idx:string, displayName:string)\r\n    {\r\n        this.id = idx;\r\n        this.name = displayName;\r\n    }\r\n    public id: string;\r\n    public name:string;\r\n}","import { Card } from './card';\r\n\r\nexport class CardTable\r\n{\r\n    constructor(ccard:Card, cuserName:string)\r\n    {\r\n        this.card = ccard;\r\n        this.userName = cuserName;\r\n    }\r\n    public card:Card;\r\n    public userName:string;\r\n    public current:boolean;\r\n}","\r\nimport { Card } from './card';\r\nimport { DeckofCard } from './deckofCard';\r\nimport { User } from './user';\r\n\r\nexport class Game\r\n{\r\n    constructor(gname:string, gowner:User,gcards:Card[])\r\n    {\r\n        this.name = gname;\r\n        this.owner = gowner;\r\n        this.deck = gcards;\r\n        this.originalDeck = gcards;\r\n        this.id = gowner.user.id;\r\n    }\r\n    public id: string;\r\n    public name:string;\r\n    public owner:User;\r\n    public originalDeck:Card[];\r\n    public deck:Card[];\r\n    public users:string[] = [];\r\n    public table:Card[];\r\n}","import { CardTable } from './cardTable';\r\n\r\nexport class Table\r\n{\r\n    public id: string;\r\n    public cardList:CardTable[];\r\n}","import { Card } from '../game/card';\r\nimport { UserLogin } from '../authentication/userLogin';\r\nexport class User\r\n{\r\n    constructor(idx:string, displayName:string)\r\n    {\r\n        this.user = new UserLogin(idx,displayName);\r\n    }\r\n    public user: UserLogin;\r\n    public cardList:Card[];\r\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-create-game',\n  templateUrl: './create-game.component.html',\n  styleUrls: ['./create-game.component.css']\n})\nexport class CreateGameComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n    <h4>Create una nueva partida o unite a una que ya existe.</h4>\n    <div>\n        <app-search-user></app-search-user>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-join-game',\n  templateUrl: './join-game.component.html',\n  styleUrls: ['./join-game.component.css']\n})\nexport class JoinGameComponent implements OnInit {\n  showError:boolean;\n  nameGame:string;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  joinGame()\n  {\n\n  }\n}\n","<div>\n    <h4>Unirce a una partida</h4>\n    <div>\n        <div class=\"form-group\">\n            <div class=\"input-group mb-3\">\n                <input [(ngModel)]=\"nameGame\" type=\"text\" class=\"form-control\" placeholder=\"Nombre de la partida\" aria-label=\"Nombre de la partida\" aria-describedby=\"button-addon2\">\n                <div class=\"input-group-append\">\n                    <button class=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon2\" (click)=\"joinGame()\">Crear</button>\n                </div>\n            </div>\n        </div>\n        <div class=\"alert alert-danger\" [hidden]=\"showError\" role=\"alert\">\n            No fue posible unirce a la partida.\n        </div>\n    </div>\n</div>","import { AuthService } from './../../services/authentication/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { Router } from '@angular/router';\nimport { GameService } from '../../services/game/game.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  \n  constructor(\n    public auth: AuthService,\n    private router: Router,\n    public gameService:GameService) {\n      \n    }\n\n  ngOnInit(): void {\n    this.auth.getUser().subscribe((user) =>\n    {\n       if(user)\n       {\n        //this.router.navigate(['newGame'])     \n          let games = this.gameService.getGameforUserId(user.id);\n          games.then((result) =>\n          {\n             if(result != null && result.length > 0)\n                this.router.navigate(['table'],{ queryParams: { gameData: JSON.stringify(result[0])} });\n            else  \n              this.router.navigate(['menu']) \n          });\n       }\n\n    }) \n  }\n  login() {\n    this.auth.login();\n  }\n  logout() {\n    this.auth.logout();\n  }\n\n}\n","<div class=\"center\">\n\n    <div *ngIf=\"auth.getUser() | async as user; else showLogin\">\n        <h1>Hola {{ user.name }}!</h1>\n    </div>\n    <ng-template #showLogin>\n        <button type=\"button\" class=\"btn btn-primary btn-lg btn-block\" (click)=\"login()\">Iniciar sesion <i class=\"fa fa-google-plus-square\" aria-hidden=\"true\"></i></button>\n    </ng-template>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { UserService } from '../../services/user/user.service';\nimport { NgModule } from '@angular/core';\nimport { User } from '../../models/game/user';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n  users: Observable<User[]>;\n  gameName:string;\n  ntNewGame:boolean = false;\n  constructor(userService: UserService) {\n    this.users = userService.getObserverUsers();\n   }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <p>Seleccione su menu</p>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TableComponent } from './table/table.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { LoginComponent } from './login/login.component';\nimport { FormsModule } from '@angular/forms';\nimport { CreateGameComponent } from './create-game/create-game.component';\nimport { ComponentModule } from '../components/component.module';\nimport { JoinGameComponent } from './join-game/join-game.component';\n\n\n\n\n@NgModule({\n  declarations: [\n    MenuComponent,\n    TableComponent,\n    LoginComponent,\n    CreateGameComponent,\n    JoinGameComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ComponentModule\n  ]\n})\nexport class PageModule { }\n","<div *ngIf=\"game\" class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"col-6\">Estas jugando: {{game.name}}</div>\r\n        <div *ngIf=\"authService.getCurrentUser().id == game.owner.user.id\" class=\"col-2\">\r\n            <button type=\"button\" class=\"btn btn-dark\" (click)=\"endGame()\">Terminar juego</button>\r\n        </div>\r\n        <div *ngIf=\"authService.getCurrentUser().id == game.owner.user.id\" class=\"col-2\"><button type=\"button\" class=\"btn btn-dark\" (click)=\"resetCards()\">Resetear partida</button></div>\r\n        <div *ngIf=\"authService.getCurrentUser().id == game.owner.user.id\" class=\"col-2\">\r\n            <button type=\"button\" class=\"btn btn-dark\" data-toggle=\"modal\" data-target=\"#modalDeal\">Repartir cartas</button>\r\n        </div>\r\n        <div *ngIf=\"authService.getCurrentUser().id != game.owner.user.id\" class=\"col-2\"><button type=\"button\" class=\"btn btn-dark\" (click)=\"outGame()\">Salir de la partida</button></div>\r\n    </div>\r\n</div>\r\n<div class=\"alert alert-danger\" role=\"alert\" [hidden]=\"hiddenError\">\r\n    {{messageError}}\r\n</div>\r\n<h5 *ngIf=\"game\" class=\"card-title\">Mis cartas</h5>\r\n<div class=\"container\" *ngIf=\"game && (mycards | async) && (mycards | async)?.length > 0; else showEmpty\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-2 col-4\" style=\"margin: 10px;\" *ngFor=\"let item of mycards | async\">\r\n            <app-card-view (playCard)=\"playCard($event)\" [card]=\"item\"></app-card-view>\r\n        </div>\r\n    </div>\r\n</div>\r\n<ng-template #showEmpty>\r\n    <div class=\"alert alert-warning\" role=\"alert\">\r\n        Esperando mis cartas...\r\n    </div>\r\n</ng-template>\r\n<div class=\"container\" style=\"background: beige;\" *ngIf=\"game && (tablecards | async) && (tablecards | async)?.length > 0; else showTableEmpty\">\r\n    <h5 *ngIf=\"game\" class=\"card-title\">Mesa</h5>\r\n    <div class=\"row\">\r\n        <div class=\"col-4 col-md-2\" style=\"margin: 10px;\" [ngClass]=\"{'sample': item.userName.toUpperCase() =='MUESTRA','current': item.current}\" *ngFor=\"let item of tablecards | async  \">\r\n            <app-card-view-table (playCard)=\"playCard($event)\" [card]=\"item\"></app-card-view-table>\r\n        </div>\r\n    </div>\r\n</div>\r\n<ng-template #showTableEmpty>\r\n    <div class=\"alert alert-warning\" role=\"alert\">\r\n        Esperando cartas...\r\n    </div>\r\n</ng-template>\r\n<h5 *ngIf=\"game\" class=\"card-title\">Cartas de los prticipantes</h5>\r\n<div class=\"container\" *ngIf=\"(usercards | async) && (usercards | async)?.length > 0; else showUserEmpty\">\r\n    <div class=\"row\">\r\n        <div class=\"col-12\" style=\"margin: 10px;\" *ngFor=\"let item of usercards | async\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-3 col-sm-4\">{{item.userName}}</div>\r\n                <div class=\"col-md-9 col-sm-8\">{{item.cardCount}}</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<ng-template #showUserEmpty>\r\n    <div class=\"alert alert-warning\" role=\"alert\">\r\n        El juego no tiene otros participantes\r\n    </div>\r\n</ng-template>\r\n\r\n<app-deal-cards [idModal]=\"'modalDeal'\" (dealCard)=\"dealCards($event)\"></app-deal-cards>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { filter } from 'rxjs/internal/operators/filter';\nimport { Game } from '../../models/game/game';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { TableService } from '../../services/game/table.service';\nimport { AuthService } from '../../services/authentication/auth.service';\nimport { Card } from '../../models/game/card';\nimport { CardService } from '../../services/game/card.service';\nimport { GameService } from '../../services/game/game.service';\nimport { UserGameService } from '../../services/game/usergame.service';\nimport { CardTable } from '../../models/game/cardTable';\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.css']\n})\nexport class TableComponent implements OnInit {\n  hiddenError:boolean = false;\n  game:Game;\n  mycards:Observable<Card[]>;\n  tablecards:Observable<CardTable[]>;\n  usercards: Observable<any[]>;\n  messageError:string = \"No pudimos hacer tu tarea.\";\n  constructor(public router: ActivatedRoute,\n    public cardService:CardService,\n    public tableService:TableService,\n    public authService:AuthService,\n    public gameService:GameService,\n    public userGameService:UserGameService,\n    private routerService: Router) { }\n\n  ngOnInit(): void {\n    this.setErrorMessage(\"No pudimos hacer tu tarea.\", false);\n    this.gameService.getGameforUserId(this.authService.getCurrentUser().id).then(\n      (result) =>\n      {\n        if(result && result.length > 0)\n        {\n         this.game = result[0];\n         this.tablecards = this.tableService.getTableforGameId(this.game.id);\n         this.mycards = this.tableService.getCardforUserforGameId(this.game.id, this.authService.getCurrentUser().id);\n         this.usercards = this.userGameService.getChangeUsersGame(this.game.id, this.authService.getCurrentUser().id);\n        }\n      });\n    \n      }\n  async dealCards(data)\n  {\n    let index = 0;\n    if(!data.countCardUsers || data.countCardUsers == 0)\n    {\n      this.setErrorMessage(\"Tenes que ingresar la cantidad de cartas a repartir.\", true);\n      return;\n    }\n    this.hiddenError = true;;\n    let deck = await this.cardService.getDeckofCards(this.game.id);\n    let users = await this.userGameService.getUsersGame(this.game.id);\n    if(users == null || users.length == 0)\n      this.setErrorMessage(\"No tenes a quien repartir cartas.\", true);\n    else if(!users || deck.length <  this.getNecesaryCard(data.countCardUsers, users.length))\n      this.setErrorMessage(\"No te quedan suficientes cartas en el maso para repartir.\", true);\n    else\n    {\n      users.forEach(user => {\n          let card = deck.slice(index, index + data.countCardUsers);   \n          this.cardService.sendUserCard(this.game.id, user.user.id, card).then();\n          this.cardService.deleteCardofDeckofCards(this.game.id,card).then();\n          index = index + data.countCardUsers;\n        });\n      if(data.PutSample)\n      {\n        let count = !data.countCardTable || data.countCardTable == 0?1:data.countCardTable;\n        let cards = deck.slice(index, index + count);  \n        this.putSampleprocess(cards, \"Muestra\");\n      }\n    }\n  }\n  async playCard(card:Card)\n  {   \n    this.playCardprocess([card], this.authService.getCurrentUser().name);   \n  }\n  async playCardprocess(card:Card[], userName:string)\n  {\n    let ctable:CardTable[] = [];\n    card.forEach(element => {\n      ctable.push(new CardTable(element, userName));\n    });\n    let sendtCard = this.cardService.sendTableCard(this.game.id, ctable);\n    let deleteCard =  this.userGameService.deleteCardofUser(this.game.id, this.authService.getCurrentUser().id,\n    card);\n    await sendtCard.then(() => \n    deleteCard.then());\n    // .catch((error) =>  this.setErrorMessage(\"No pudimos hacer tu tarea.\", true)))\n    // .catch((error) => this.setErrorMessage(\"No pudimos hacer tu tarea.\", true));\n  }\n  async putSampleprocess(card:Card[], userName:string)\n  {\n    let ctable:CardTable[] = [];\n    card.forEach(element => {\n      ctable.push(new CardTable(element, userName));\n    });\n    let sendtCard = this.cardService.sendTableCard(this.game.id, ctable);\n    let deleteCard =  this.cardService.deleteCardofDeckofCards(this.game.id,card).then();\n    await sendtCard.then(() => \n    deleteCard.then());\n    // .catch((error) =>  this.setErrorMessage(\"No pudimos hacer tu tarea.\", true)))\n    // .catch((error) => this.setErrorMessage(\"No pudimos hacer tu tarea.\", true));\n  }\n  async resetCards()\n  {\n    this.setErrorMessage(\"No pudimos hacer tu tarea.\", false)\n    await this.tableService.resetCardsinTable(this.game.id);\n    let users = await this.userGameService.getUsersGame(this.game.id);\n    users.forEach(user => {\n         this.userGameService.resetCardsforUser(this.game.id,user.user.id).then();\n      });\n    this.gameService.resetCardList(this.game.id).then();\n  }\n  async endGame()\n  {\n    this.setErrorMessage(\"No pudimos hacer tu tarea.\", false)\n    this.hiddenError = true;\n\n    let users = await this.userGameService.getUsersGame(this.authService.getCurrentUser().id);\n    if(users)\n    users.forEach(element => {\n      this.userGameService.deleteUserforGame(this.authService.getCurrentUser().id, element.user.id).then();\n    });\n    await this.gameService.deleteGame(this.authService.getCurrentUser().id);\n    this.routerService.navigate(['menu']);\n  }\n  async outGame()\n  {\n    await this.userGameService.deleteUserforGame(this.game.id,this.authService.getCurrentUser().id);\n    this.routerService.navigate(['menu']);\n  }\n  \n getNecesaryCard(countCardforUser, usersLength)\n {\n    return (countCardforUser * usersLength);\n }\n setErrorMessage(message:string, show:boolean)\n {  \n      this.hiddenError = !show;\n      this.messageError = message;\n }\n}\n","import { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\nimport { Router, RouterStateSnapshot } from '@angular/router';\nimport { UserLogin } from '../../models/authentication/userLogin';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService {\n  user:UserLogin;\n  constructor(private router: Router,\n    public auth: AuthService) {\n    this.auth.getUser().subscribe((user) =>\n    {\n      this.user = user;\n    });\n   }\n  canActivate(state: RouterStateSnapshot) {\n    if (this.user && this.user != null) \n        return true;\n    else\n    {\n      this.router.navigate(['login'], { queryParams: { returnUrl: state.url } });\n      return false;\n    }\n  }\n}\n","import { UserLogin } from '../../models/authentication/userLogin';\nimport { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { auth } from 'firebase/app';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private userSubject = new BehaviorSubject<UserLogin>(null);\n  private currentUser:UserLogin;\n  constructor(public auth: AngularFireAuth,\n    public firestore: AngularFirestore) { }\n  getUser(): Observable<UserLogin>\n  {\n    return this.userSubject.asObservable();\n  }\n  login() {\n    this.auth.signInWithPopup(new auth.GoogleAuthProvider()).\n    then((result) =>\n    {\n      this.currentUser = new UserLogin(result.user.uid, result.user.displayName);\n      var userItems = this.firestore.collection('users');\n      userItems.doc<UserLogin>(this.currentUser.id).set(Object.assign({}, this.currentUser));\n      this.userSubject.next(this.currentUser);\n    });\n  }\n  logout() {\n    this.auth.signOut().then((result) =>\n    {\n      var userItems = this.firestore.collection('users');\n      userItems.doc<UserLogin>(this.currentUser.id).delete();\n      this.currentUser = null;\n      this.userSubject.next(this.currentUser);\n    });\n  }\n  getCurrentUser(): UserLogin\n  {\n    return this.currentUser;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { Game } from '../../models/game/game';\nimport { AuthService } from '../authentication/auth.service';\nimport { map } from 'rxjs/internal/operators/map';\nimport { Card } from '../../models/game/card';\nimport { firestore } from 'firebase/app';\nimport { DeckofCard } from '../../models/game/deckofCard';\nimport { CardTable } from '../../models/game/cardTable';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CardService {\n\n  constructor(public firestore: AngularFirestore,\n    public auth:AuthService) { }\n  async getListDeckofCardsAsync(): Promise<DeckofCard[]>\n  {\n    return this.firestore.collection<DeckofCard>('deck').get().pipe\n    (map((result) =>\n    {\n      return result.docs.map(map => map.data() as DeckofCard);\n    })).toPromise();\n  }\n  async getDeckofCards(id:string):Promise<Card[]>\n  {\n    return await this.firestore.collection('games').doc<Game>(id).get()\n    .pipe(map((game) => \n    {\n      if(game.exists)\n        return game.data().deck;\n      else\n        return null;\n    })).toPromise();\n\n  }\n  sendUserCard(id:string, idUser:string, card:Card[])\n  {\n    return this.firestore.collection('games').doc<Game>(id).collection('users').\n    doc(idUser).update({cardList:firestore.FieldValue.arrayUnion(...card)});\n\n  }\n  async sendTableCard(id:string, card:CardTable[])\n  {\n    return await this.firestore.collection('games').doc<Game>(id).collection('tables').\n    doc(\"one\").update({cardList:firestore.FieldValue.arrayUnion(...JSON.parse(JSON.stringify(card)))});\n\n  }\n  deleteCardofDeckofCards(id:string, card:Card[])\n  {\n    return this.firestore.collection('games').doc(id).\n    update({deck:firestore.FieldValue.arrayRemove(...card)});\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { Game } from '../../models/game/game';\nimport { AuthService } from '../authentication/auth.service';\nimport { map } from 'rxjs/internal/operators/map';\nimport { flatMap } from 'rxjs/operators';\nimport { GameModel } from './model/gameModel';\nimport { Table } from '../../models/game/table';\nimport { firestore } from 'firebase/app';\nimport { pipe } from 'rxjs/internal/util/pipe';\nimport { User } from '../../models/game/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GameService {\n\n  constructor(public firestore: AngularFirestore,\n    public auth:AuthService) { }\n  async createNewGame(game:Game):Promise<string>\n  {\n    let userItems = this.firestore.collection('games');\n    let model =  new GameModel(game.name,game.owner, game.deck);\n    model.users = game.users;\n    return await userItems.doc(game.owner.user.id).set(JSON.parse(JSON.stringify(model))).then(() =>\n    {\n      let table = new Table();\n      table.cardList = [];\n      table.id = \"one\";\n      this.firestore.collection('games').doc(game.owner.user.id).collection(\"tables\").\n      doc(\"one\").set(JSON.parse(JSON.stringify(table))).then();\n      let user = game.owner;\n      user.cardList = [];\n      this.firestore.collection('games').doc(game.owner.user.id).collection(\"users\").\n      doc(user.user.id).set(JSON.parse(JSON.stringify(user))).then();\n      return game.name;\n    }).catch((error) =>\n    {\n       throw error;    \n    });  \n  }\n  async addUsertoGame(gameid:string, user:User)\n  {\n    return this.firestore.collection<Game>('games').doc(gameid)\n    .update({users:firestore.FieldValue.arrayUnion(user.user.id)}).then(() =>\n    {\n      return this.firestore.collection('games').doc(gameid).collection(\"users\").\n      doc(user.user.id).set(JSON.parse(JSON.stringify(user)));\n    });\n\n  }\n  async getGame(name:string) : Promise<Game[]>\n  {\n    let userItems = this.firestore.collection<Game>('games',ref => ref.where('name', '==', name));\n    return userItems.get().pipe(map((result) =>\n    {\n      if(result.empty)\n        return null;\n      else\n      return result.docs.map(map => {\n        let g = map.data() as Game;\n        g.id = map.id;\n        return g;\n    });\n  })).toPromise();\n}\n  getGameforId(id:string)\n  {\n    let result = this.firestore.collection('games').doc<Game>(id);\n    return result.valueChanges();\n  }\n  async getGameforUserId(id:string)\n  {\n    let result =  this.firestore.collection<Game>('games', ref => ref.where('users', 'array-contains', id));\n   //return result.valueChanges({ idField: 'id' });\n   return await result.get().pipe(map((result) =>\n   {\n     return result.docs.map(map => {\n         let g = map.data() as Game;\n         g.id = map.id;\n         return g;\n     });\n   })).toPromise();\n  }\n  async deleteGame(id:string)\n  {\n    this.firestore.collection<Game>('games').doc(id)\n    .delete().then((result) =>\n        this.firestore.collection<Game>('games').doc(id).collection('tables').\n         doc(\"one\").delete().then()\n      ).catch();  \n  }\n  \n  resetCardList(id:string)\n  {\n    return this.firestore.collection<Game>('games').doc(id).get().\n    pipe(flatMap((result) =>\n    {\n      let deck = this.shuffle((result.data() as Game).originalDeck);\n      return this.firestore.collection<Game>('games').doc(id).\n      update({deck:deck});\n    })).toPromise();\n  }\n  shuffle(array) {\n    var currentIndex = array.length, temporaryValue, randomIndex;\n  \n    while (0 !== currentIndex) {\n  \n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n  \n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n  \n    return array;\n   }\n}\n","\r\nimport { DeckofCard } from '../../../models/game/deckofCard';\r\nimport { User } from '../../../models/game/user';\r\nimport { Card } from '../../../models/game/card';\r\nexport class GameModel\r\n{\r\n    constructor(gname:string, gowner:User, gdeck:Card[])\r\n    {\r\n        this.name = gname;\r\n        this.owner = gowner;\r\n        this.deck = gdeck;\r\n        this.originalDeck = gdeck;\r\n    }\r\n    public id: string;\r\n    public name:string;\r\n    public owner:User;\r\n    public deck:Card[];\r\n    public originalDeck:Card[];\r\n    public users:string[] = [];\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { AuthService } from '../authentication/auth.service';\nimport { Table } from '../../models/game/table';\nimport { map } from 'rxjs/internal/operators/map';\nimport { CardTable } from '../../models/game/cardTable';\nimport { User } from '../../models/game/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TableService {\n\n  constructor(public firestore: AngularFirestore,\n    public auth:AuthService) { }\n  getTableforGameId(id:string)\n  {\n    let result = this.firestore.doc<Table>(\"games/\" + id + \"/tables/one\");\n    return result.valueChanges().pipe(map((m) =>\n    {\n        let result =  m.cardList.reverse();\n        let p = result.filter(x => x.userName.toUpperCase() != \"MUESTRA\");\n        if(p && p.length > 0)\n          result.filter(x => x.userName.toUpperCase() != \"MUESTRA\")[0].current = true;\n        let response = result.filter(x => x.userName.toUpperCase() == \"MUESTRA\");\n        response.push(... result.filter(x => x.userName.toUpperCase() != \"MUESTRA\"));\n        return response;\n    }));\n  }\n  getCardforUserforGameId(id:string, userId:string)\n  {\n    let result = this.firestore.doc<User>(\"games/\" + id + \"/users/\" + userId);\n    return result.valueChanges().pipe(map((m) =>\n    {\n      if(m && m.cardList)\n        return m.cardList;\n        else\n        return null;\n    }));\n  }\n  async resetCardsinTable(id:string)\n  {\n    return await this.firestore.collection('games').doc(id).collection<Table>(\"tables\").doc(\"one\").\n    update({cardList:[]});\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { AuthService } from '../authentication/auth.service';\nimport { map } from 'rxjs/internal/operators/map';\nimport { Card } from '../../models/game/card';\nimport { firestore } from 'firebase/app';\nimport { User } from '../../models/game/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserGameService {\n\n  constructor(public firestore: AngularFirestore,\n    public auth:AuthService) { }\n  getUserforGameId(id:string, userId:string)\n  {\n    let result = this.firestore.doc<User>(\"games/\" + id + \"/users/\" + userId);\n    return result.valueChanges().pipe(map((m) =>\n    {\n        return m.cardList??null;\n    }));\n  }\n  async resetCardsforUser(id:string, iduser:string)\n  {\n    return await this.firestore.collection('games').doc(id).collection<User>(\"users\").\n    doc(iduser).update({cardList:[]});\n  }\n  async getUsersGame(id:string) :Promise<User[]>\n  {\n    return await this.firestore.collection('games').doc(id).collection<User>(\"users\").get()\n    .pipe(map((user) =>\n    {\n      if(user.empty)\n        return null;\n      else\n        return user.docs.map(map => map.data() as User);\n    })).toPromise();\n  }\n  getChangeUsersGame(id:string, currentId:string)\n  {\n    return this.firestore.collection('games').doc(id).\n    collection<User>(\"users\").\n    valueChanges().pipe(map((user) =>\n    {\n      return user.filter(x => x.user.id != currentId).map(m => {\n        return {cardCount:m.cardList?m.cardList.length:0, userName: m.user.name};\n      });\n    }));\n  }\n  async deleteCardofUser(id:string,idUser:string, card:Card[])\n  {\n    return await this.firestore.collection('games').doc(id).collection(\"users\").doc(idUser).\n    update({cardList:firestore.FieldValue.arrayRemove(...card)});\n\n  }\n  async deleteUserforGame(id:string, idUser:string)\n  {\n    await this.firestore.collection('games').doc(id).collection('users').\n    doc(idUser).delete();\n  }\n}\n","import { AuthGuardService } from './authentication/auth-guard.service';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from './authentication/auth.service';\nimport { GameService } from './game/game.service';\nimport { UserService } from './user/user.service';\nimport { TableService } from './game/table.service';\nimport { UserGameService } from './game/usergame.service';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers:[\n    AuthGuardService,\n    AuthService,\n    GameService,\n    UserService,\n    TableService,\n    UserGameService\n  ]\n})\nexport class SrviceModule { }\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\nimport { User } from '../../models/game/user';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private userSubject = new BehaviorSubject<User[]>(null);\n  private currentUsers:User[];\n  constructor(public firestore: AngularFirestore) { }\n  getObserverUsers(): Observable<User[]>\n  {\n    this.firestore.collection<User>(\"users\").valueChanges().subscribe((result) =>\n    {\n        this.currentUsers = result;\n        this.userSubject.next(this.currentUsers);\n    });\n    return this.userSubject.asObservable();    \n  }\n  getUsersforName(name:string)\n  {\n    if(name == \"\")\n       return;\n    else\n    {\n        var users = this.currentUsers.filter(x => x.user.name.includes(name));\n        this.userSubject.next(users);\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n  apiKey: \"AIzaSyDmu6auDECXIbVmTfqp4AvLOInTvuRcOWE\",\n  authDomain: \"pruebadeconcepto-1208.firebaseapp.com\",\n  databaseURL: \"https://pruebadeconcepto-1208.firebaseio.com\",\n  projectId: \"pruebadeconcepto-1208\",\n  storageBucket: \"pruebadeconcepto-1208.appspot.com\",\n  messagingSenderId: \"609815317337\",\n  appId: \"1:609815317337:web:7b826f5b4cf447c98f5a48\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}